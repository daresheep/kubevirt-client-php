<?php
/**
 * V1KubeVirtConfiguration
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * KubeVirt API
 *
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * V1KubeVirtConfiguration Class Doc Comment
 *
 * @category Class
 * @description KubeVirtConfiguration holds all kubevirt configurations
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class V1KubeVirtConfiguration implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'v1.KubeVirtConfiguration';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cpu_model' => 'string',
        'cpu_request' => '\Swagger\Client\Model\K8sIoApimachineryPkgApiResourceQuantity',
        'developer_configuration' => '\Swagger\Client\Model\V1DeveloperConfiguration',
        'emulated_machines' => 'string[]',
        'image_pull_policy' => 'string',
        'machine_type' => 'string',
        'mem_balloon_stats_period' => 'int',
        'migrations' => '\Swagger\Client\Model\V1MigrationConfiguration',
        'min_cpu_model' => 'string',
        'network' => '\Swagger\Client\Model\V1NetworkConfiguration',
        'obsolete_cpu_models' => 'map[string,bool]',
        'ovmf_path' => 'string',
        'permitted_host_devices' => '\Swagger\Client\Model\V1PermittedHostDevices',
        'selinux_launcher_type' => 'string',
        'smbios' => '\Swagger\Client\Model\V1SMBiosConfiguration',
        'supported_guest_agent_versions' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cpu_model' => null,
        'cpu_request' => null,
        'developer_configuration' => null,
        'emulated_machines' => null,
        'image_pull_policy' => null,
        'machine_type' => null,
        'mem_balloon_stats_period' => 'int64',
        'migrations' => null,
        'min_cpu_model' => null,
        'network' => null,
        'obsolete_cpu_models' => null,
        'ovmf_path' => null,
        'permitted_host_devices' => null,
        'selinux_launcher_type' => null,
        'smbios' => null,
        'supported_guest_agent_versions' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cpu_model' => 'cpuModel',
        'cpu_request' => 'cpuRequest',
        'developer_configuration' => 'developerConfiguration',
        'emulated_machines' => 'emulatedMachines',
        'image_pull_policy' => 'imagePullPolicy',
        'machine_type' => 'machineType',
        'mem_balloon_stats_period' => 'memBalloonStatsPeriod',
        'migrations' => 'migrations',
        'min_cpu_model' => 'minCPUModel',
        'network' => 'network',
        'obsolete_cpu_models' => 'obsoleteCPUModels',
        'ovmf_path' => 'ovmfPath',
        'permitted_host_devices' => 'permittedHostDevices',
        'selinux_launcher_type' => 'selinuxLauncherType',
        'smbios' => 'smbios',
        'supported_guest_agent_versions' => 'supportedGuestAgentVersions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cpu_model' => 'setCpuModel',
        'cpu_request' => 'setCpuRequest',
        'developer_configuration' => 'setDeveloperConfiguration',
        'emulated_machines' => 'setEmulatedMachines',
        'image_pull_policy' => 'setImagePullPolicy',
        'machine_type' => 'setMachineType',
        'mem_balloon_stats_period' => 'setMemBalloonStatsPeriod',
        'migrations' => 'setMigrations',
        'min_cpu_model' => 'setMinCpuModel',
        'network' => 'setNetwork',
        'obsolete_cpu_models' => 'setObsoleteCpuModels',
        'ovmf_path' => 'setOvmfPath',
        'permitted_host_devices' => 'setPermittedHostDevices',
        'selinux_launcher_type' => 'setSelinuxLauncherType',
        'smbios' => 'setSmbios',
        'supported_guest_agent_versions' => 'setSupportedGuestAgentVersions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cpu_model' => 'getCpuModel',
        'cpu_request' => 'getCpuRequest',
        'developer_configuration' => 'getDeveloperConfiguration',
        'emulated_machines' => 'getEmulatedMachines',
        'image_pull_policy' => 'getImagePullPolicy',
        'machine_type' => 'getMachineType',
        'mem_balloon_stats_period' => 'getMemBalloonStatsPeriod',
        'migrations' => 'getMigrations',
        'min_cpu_model' => 'getMinCpuModel',
        'network' => 'getNetwork',
        'obsolete_cpu_models' => 'getObsoleteCpuModels',
        'ovmf_path' => 'getOvmfPath',
        'permitted_host_devices' => 'getPermittedHostDevices',
        'selinux_launcher_type' => 'getSelinuxLauncherType',
        'smbios' => 'getSmbios',
        'supported_guest_agent_versions' => 'getSupportedGuestAgentVersions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cpu_model'] = isset($data['cpu_model']) ? $data['cpu_model'] : null;
        $this->container['cpu_request'] = isset($data['cpu_request']) ? $data['cpu_request'] : null;
        $this->container['developer_configuration'] = isset($data['developer_configuration']) ? $data['developer_configuration'] : null;
        $this->container['emulated_machines'] = isset($data['emulated_machines']) ? $data['emulated_machines'] : null;
        $this->container['image_pull_policy'] = isset($data['image_pull_policy']) ? $data['image_pull_policy'] : null;
        $this->container['machine_type'] = isset($data['machine_type']) ? $data['machine_type'] : null;
        $this->container['mem_balloon_stats_period'] = isset($data['mem_balloon_stats_period']) ? $data['mem_balloon_stats_period'] : null;
        $this->container['migrations'] = isset($data['migrations']) ? $data['migrations'] : null;
        $this->container['min_cpu_model'] = isset($data['min_cpu_model']) ? $data['min_cpu_model'] : null;
        $this->container['network'] = isset($data['network']) ? $data['network'] : null;
        $this->container['obsolete_cpu_models'] = isset($data['obsolete_cpu_models']) ? $data['obsolete_cpu_models'] : null;
        $this->container['ovmf_path'] = isset($data['ovmf_path']) ? $data['ovmf_path'] : null;
        $this->container['permitted_host_devices'] = isset($data['permitted_host_devices']) ? $data['permitted_host_devices'] : null;
        $this->container['selinux_launcher_type'] = isset($data['selinux_launcher_type']) ? $data['selinux_launcher_type'] : null;
        $this->container['smbios'] = isset($data['smbios']) ? $data['smbios'] : null;
        $this->container['supported_guest_agent_versions'] = isset($data['supported_guest_agent_versions']) ? $data['supported_guest_agent_versions'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets cpu_model
     *
     * @return string
     */
    public function getCpuModel()
    {
        return $this->container['cpu_model'];
    }

    /**
     * Sets cpu_model
     *
     * @param string $cpu_model cpu_model
     *
     * @return $this
     */
    public function setCpuModel($cpu_model)
    {
        $this->container['cpu_model'] = $cpu_model;

        return $this;
    }

    /**
     * Gets cpu_request
     *
     * @return \Swagger\Client\Model\K8sIoApimachineryPkgApiResourceQuantity
     */
    public function getCpuRequest()
    {
        return $this->container['cpu_request'];
    }

    /**
     * Sets cpu_request
     *
     * @param \Swagger\Client\Model\K8sIoApimachineryPkgApiResourceQuantity $cpu_request cpu_request
     *
     * @return $this
     */
    public function setCpuRequest($cpu_request)
    {
        $this->container['cpu_request'] = $cpu_request;

        return $this;
    }

    /**
     * Gets developer_configuration
     *
     * @return \Swagger\Client\Model\V1DeveloperConfiguration
     */
    public function getDeveloperConfiguration()
    {
        return $this->container['developer_configuration'];
    }

    /**
     * Sets developer_configuration
     *
     * @param \Swagger\Client\Model\V1DeveloperConfiguration $developer_configuration developer_configuration
     *
     * @return $this
     */
    public function setDeveloperConfiguration($developer_configuration)
    {
        $this->container['developer_configuration'] = $developer_configuration;

        return $this;
    }

    /**
     * Gets emulated_machines
     *
     * @return string[]
     */
    public function getEmulatedMachines()
    {
        return $this->container['emulated_machines'];
    }

    /**
     * Sets emulated_machines
     *
     * @param string[] $emulated_machines emulated_machines
     *
     * @return $this
     */
    public function setEmulatedMachines($emulated_machines)
    {
        $this->container['emulated_machines'] = $emulated_machines;

        return $this;
    }

    /**
     * Gets image_pull_policy
     *
     * @return string
     */
    public function getImagePullPolicy()
    {
        return $this->container['image_pull_policy'];
    }

    /**
     * Sets image_pull_policy
     *
     * @param string $image_pull_policy image_pull_policy
     *
     * @return $this
     */
    public function setImagePullPolicy($image_pull_policy)
    {
        $this->container['image_pull_policy'] = $image_pull_policy;

        return $this;
    }

    /**
     * Gets machine_type
     *
     * @return string
     */
    public function getMachineType()
    {
        return $this->container['machine_type'];
    }

    /**
     * Sets machine_type
     *
     * @param string $machine_type machine_type
     *
     * @return $this
     */
    public function setMachineType($machine_type)
    {
        $this->container['machine_type'] = $machine_type;

        return $this;
    }

    /**
     * Gets mem_balloon_stats_period
     *
     * @return int
     */
    public function getMemBalloonStatsPeriod()
    {
        return $this->container['mem_balloon_stats_period'];
    }

    /**
     * Sets mem_balloon_stats_period
     *
     * @param int $mem_balloon_stats_period mem_balloon_stats_period
     *
     * @return $this
     */
    public function setMemBalloonStatsPeriod($mem_balloon_stats_period)
    {
        $this->container['mem_balloon_stats_period'] = $mem_balloon_stats_period;

        return $this;
    }

    /**
     * Gets migrations
     *
     * @return \Swagger\Client\Model\V1MigrationConfiguration
     */
    public function getMigrations()
    {
        return $this->container['migrations'];
    }

    /**
     * Sets migrations
     *
     * @param \Swagger\Client\Model\V1MigrationConfiguration $migrations migrations
     *
     * @return $this
     */
    public function setMigrations($migrations)
    {
        $this->container['migrations'] = $migrations;

        return $this;
    }

    /**
     * Gets min_cpu_model
     *
     * @return string
     */
    public function getMinCpuModel()
    {
        return $this->container['min_cpu_model'];
    }

    /**
     * Sets min_cpu_model
     *
     * @param string $min_cpu_model min_cpu_model
     *
     * @return $this
     */
    public function setMinCpuModel($min_cpu_model)
    {
        $this->container['min_cpu_model'] = $min_cpu_model;

        return $this;
    }

    /**
     * Gets network
     *
     * @return \Swagger\Client\Model\V1NetworkConfiguration
     */
    public function getNetwork()
    {
        return $this->container['network'];
    }

    /**
     * Sets network
     *
     * @param \Swagger\Client\Model\V1NetworkConfiguration $network network
     *
     * @return $this
     */
    public function setNetwork($network)
    {
        $this->container['network'] = $network;

        return $this;
    }

    /**
     * Gets obsolete_cpu_models
     *
     * @return map[string,bool]
     */
    public function getObsoleteCpuModels()
    {
        return $this->container['obsolete_cpu_models'];
    }

    /**
     * Sets obsolete_cpu_models
     *
     * @param map[string,bool] $obsolete_cpu_models obsolete_cpu_models
     *
     * @return $this
     */
    public function setObsoleteCpuModels($obsolete_cpu_models)
    {
        $this->container['obsolete_cpu_models'] = $obsolete_cpu_models;

        return $this;
    }

    /**
     * Gets ovmf_path
     *
     * @return string
     */
    public function getOvmfPath()
    {
        return $this->container['ovmf_path'];
    }

    /**
     * Sets ovmf_path
     *
     * @param string $ovmf_path ovmf_path
     *
     * @return $this
     */
    public function setOvmfPath($ovmf_path)
    {
        $this->container['ovmf_path'] = $ovmf_path;

        return $this;
    }

    /**
     * Gets permitted_host_devices
     *
     * @return \Swagger\Client\Model\V1PermittedHostDevices
     */
    public function getPermittedHostDevices()
    {
        return $this->container['permitted_host_devices'];
    }

    /**
     * Sets permitted_host_devices
     *
     * @param \Swagger\Client\Model\V1PermittedHostDevices $permitted_host_devices permitted_host_devices
     *
     * @return $this
     */
    public function setPermittedHostDevices($permitted_host_devices)
    {
        $this->container['permitted_host_devices'] = $permitted_host_devices;

        return $this;
    }

    /**
     * Gets selinux_launcher_type
     *
     * @return string
     */
    public function getSelinuxLauncherType()
    {
        return $this->container['selinux_launcher_type'];
    }

    /**
     * Sets selinux_launcher_type
     *
     * @param string $selinux_launcher_type selinux_launcher_type
     *
     * @return $this
     */
    public function setSelinuxLauncherType($selinux_launcher_type)
    {
        $this->container['selinux_launcher_type'] = $selinux_launcher_type;

        return $this;
    }

    /**
     * Gets smbios
     *
     * @return \Swagger\Client\Model\V1SMBiosConfiguration
     */
    public function getSmbios()
    {
        return $this->container['smbios'];
    }

    /**
     * Sets smbios
     *
     * @param \Swagger\Client\Model\V1SMBiosConfiguration $smbios smbios
     *
     * @return $this
     */
    public function setSmbios($smbios)
    {
        $this->container['smbios'] = $smbios;

        return $this;
    }

    /**
     * Gets supported_guest_agent_versions
     *
     * @return string[]
     */
    public function getSupportedGuestAgentVersions()
    {
        return $this->container['supported_guest_agent_versions'];
    }

    /**
     * Sets supported_guest_agent_versions
     *
     * @param string[] $supported_guest_agent_versions supported_guest_agent_versions
     *
     * @return $this
     */
    public function setSupportedGuestAgentVersions($supported_guest_agent_versions)
    {
        $this->container['supported_guest_agent_versions'] = $supported_guest_agent_versions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


