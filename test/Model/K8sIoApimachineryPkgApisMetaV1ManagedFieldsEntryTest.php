<?php
/**
 * K8sIoApimachineryPkgApisMetaV1ManagedFieldsEntryTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * KubeVirt API
 *
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * K8sIoApimachineryPkgApisMetaV1ManagedFieldsEntryTest Class Doc Comment
 *
 * @category    Class
 * @description ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class K8sIoApimachineryPkgApisMetaV1ManagedFieldsEntryTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "K8sIoApimachineryPkgApisMetaV1ManagedFieldsEntry"
     */
    public function testK8sIoApimachineryPkgApisMetaV1ManagedFieldsEntry()
    {
    }

    /**
     * Test attribute "api_version"
     */
    public function testPropertyApiVersion()
    {
    }

    /**
     * Test attribute "fields_type"
     */
    public function testPropertyFieldsType()
    {
    }

    /**
     * Test attribute "fields_v1"
     */
    public function testPropertyFieldsV1()
    {
    }

    /**
     * Test attribute "manager"
     */
    public function testPropertyManager()
    {
    }

    /**
     * Test attribute "operation"
     */
    public function testPropertyOperation()
    {
    }

    /**
     * Test attribute "time"
     */
    public function testPropertyTime()
    {
    }
}
