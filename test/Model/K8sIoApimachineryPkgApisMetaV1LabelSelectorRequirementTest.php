<?php
/**
 * K8sIoApimachineryPkgApisMetaV1LabelSelectorRequirementTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * KubeVirt API
 *
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * K8sIoApimachineryPkgApisMetaV1LabelSelectorRequirementTest Class Doc Comment
 *
 * @category    Class
 * @description A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class K8sIoApimachineryPkgApisMetaV1LabelSelectorRequirementTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "K8sIoApimachineryPkgApisMetaV1LabelSelectorRequirement"
     */
    public function testK8sIoApimachineryPkgApisMetaV1LabelSelectorRequirement()
    {
    }

    /**
     * Test attribute "key"
     */
    public function testPropertyKey()
    {
    }

    /**
     * Test attribute "operator"
     */
    public function testPropertyOperator()
    {
    }

    /**
     * Test attribute "values"
     */
    public function testPropertyValues()
    {
    }
}
